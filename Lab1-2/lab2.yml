
---
- name: Install Docker
  hosts: all
  become: true
  roles:
    - Docker  # Используем роль для установки Docker

- name: Clone repository and deploy application
  hosts: app
  become: true
  tasks:
    - name: Load app variables
      include_vars:
        file: "app.yml"

    - name: Install Git
      apt:
        name: git
        state: present
        update_cache: yes

    - name: Delete app directory
      file:
        path: "{{ app_path }}"
        state: absent

    - name: Clone remote git repository
      git:
        repo: "{{ repository }}"
        dest: "{{ app_path }}"
        force: yes

    - name: Copy Dockerfile to app directory
      copy:
        src: "{{ dockerfile_path }}"
        dest: "{{ app_path }}/Dockerfile"

    - name: Install Django and dependencies
      pip:
        name: 
          - django
          - python-dotenv
          - dj_database_url
          - whitenoise

    - name: Make migrations
      command: "python3 {{ app_path }}/manage.py makemigrations"

    - name: Apply migrations
      command: "python3 {{ app_path }}/manage.py migrate"

    - name: Collect static files
      command: "python3 {{ app_path }}/manage.py collectstatic --noinput"

    - name: Run application tests
      command: "python3 {{ app_path }}/manage.py test"

    - name: Stop existing Docker container
      shell: "sudo docker rm -f {{ docker_container_name }}"
      ignore_errors: yes

    - name: Build Docker image
      docker_image:
        build:
          path: "{{ app_path }}"
        name: "{{ docker_image_name }}"
        state: present
        source: build

    - name: Start Docker container
      docker_container:
        name: "{{ docker_container_name }}"
        image: "{{ docker_image_name }}:latest"
        state: started
        ports:
          - "{{ docker_container_port }}:80"

